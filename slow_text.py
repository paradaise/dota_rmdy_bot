import os
import edge_tts
import asyncio
from telegram import Update
from telegram.ext import ContextTypes

# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ temp —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
os.makedirs("temp", exist_ok=True)


async def text_to_slow_speech(text: str, user_id: int) -> str:
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ –∑–∞–º–µ–¥–ª–µ–Ω–Ω—É—é —Ä–µ—á—å —Å –º—É–∂—Å–∫–∏–º –≥–æ–ª–æ—Å–æ–º —á–µ—Ä–µ–∑ edge_tts"""
    mp3_path = f"temp/{user_id}_speech.mp3"

    voice = "ru-RU-DmitryNeural"
    rate = "-50%"

    try:
        communicate = edge_tts.Communicate(text, voice, rate=rate)
        await communicate.save(mp3_path)
        if os.path.exists(mp3_path):
            return mp3_path

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ text_to_slow_speech: {e}")
        return None


async def slow_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /slow_text"""
    if not context.args:
        await update.message.reply_text(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>/slow_text –ü—Ä–∏–≤–µ—Ç</code>",
            parse_mode="HTML",
        )
        return

    text = " ".join(context.args)
    try:
        slowed_path = await text_to_slow_speech(text, update.effective_user.id)

        if slowed_path:
            await update.message.reply_voice(
                voice=open(slowed_path, "rb"),
                caption=f"üó£ <b>–ó–∞–º–µ–µ–µ–µ–µ–¥–ª–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å:</b> <i>{text}</i>",
                parse_mode="HTML",
            )

            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            if os.path.exists(slowed_path):
                os.remove(slowed_path)

    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
